{"componentChunkName":"component---gatsby-theme-mdx-deck-src-templates-deck-js","path":"/","matchPath":"/*","webpackCompilationHash":"49d0228f3e3828aae814","result":{"data":{"deck":{"id":"9bbbae6a-b43c-509c-a30d-7ae352628c90","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar themes = [highlight];\nvar _frontmatter = {};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  themes: themes,\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(Head, {\n    mdxType: \"Head\"\n  }, mdx(\"title\", null, \"Unbreakable apps with ECMAScript 2077\"), mdx(\"meta\", {\n    name: \"twitter:card\",\n    content: \"summary_large_image\"\n  }), mdx(\"meta\", {\n    name: \"twitter:site\",\n    content: \"@fakenickels\"\n  }), mdx(\"meta\", {\n    name: \"twitter:title\",\n    content: \"ReasonML, ES2077\"\n  }), mdx(\"meta\", {\n    name: \"twitter:description\",\n    content: \"Unbreakable apps with ECMAScript 2077\"\n  })), mdx(\"h2\", null, \"Incoming from the future\"), mdx(\"hr\", null), mdx(Title, {\n    glitchText1: \"ES2077\",\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"ReasonML\"), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(GlitchImage, {\n    src: glitchBust,\n    mdxType: \"GlitchImage\"\n  }), mdx(\"div\", null, mdx(\"h2\", null, \"Gabriel R. Abreu\"), mdx(\"ul\", null, mdx(\"li\", null, \"Astrocoders\"), mdx(\"li\", null, \"CTO Founder\"), mdx(\"li\", null, \"Father\")))), mdx(\"hr\", null), mdx(Title, {\n    variant: \"featured\",\n    mdxType: \"Title\"\n  }, \"@fakenickels\"), mdx(\"p\", null, \"Everywhere \"), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"What's ReasonML?\"), mdx(\"ul\", null, mdx(\"li\", null, \"Yet Another Awesome Tool Created by Facebook\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Envisioned by React creator Jordan Walke\"), mdx(\"li\", null, \"Think of it as an syntax/dialect for OCaml\"), mdx(\"li\", null, \"OCaml is a super fast, type inferred, highly hackable FP language\"))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: stinks,\n    mdxType: \"ImageFit\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Put types in JS\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: stonks,\n    mdxType: \"ImageFit\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Put JS in types\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(Image, {\n    src: glitchUnbreakableImage,\n    mdxType: \"Image\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"How unbreakable?\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Let's get philosophical\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"Philosophically speaking, a problem is composed of many possible branches/conditions. Mishandling these conditions is the majority of what we call bugs.\\\"\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Let's get philosophical\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\\"A type system doesn't magically eliminate bugs; it points out the unhandled conditions and asks you to cover them\\\"\")), mdx(\"hr\", null), mdx(CodeSurfer, {\n    code: variantSnippet,\n    language: \"reason\",\n    highlights: [[1, 1], [4, 4], [4, 9]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: glitchContrastImage,\n    mdxType: \"ImageFit\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Contrast\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Types\"), mdx(CodeSurfer, {\n    code: variantTypesTsSnippet,\n    language: \"typescript\",\n    highlights: [[1, 5], [7, 10]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Pattern matching?\"), mdx(CodeSurfer, {\n    code: variantSwitchTsSnippet,\n    language: \"typescript\",\n    highlights: [[1, 1], [2, 10], [3, 3], [7, 9]],\n    mdxType: \"CodeSurfer\"\n  }), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Shared ecosystem\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"ReasonML brings together the OCaml community and the JS community\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"OCaml brings the safety and robustness the web needs\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: reasonmlToolchain,\n    mdxType: \"ImageFit\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"ReasonML toolchain\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Tools of the ecosystem\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"BuckleScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"esy.sh\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Revery\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"BuckleScript\"), mdx(\"ul\", null, mdx(\"li\", null, \"Created by Bloomberg as a better alternative to js_of_ocaml\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Powered by the ninja compiler, insane compile time\"), mdx(\"li\", null, \"Readable output\"))), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"esy.sh\"), mdx(\"ul\", null, mdx(\"li\", null, \"Brings npm concepts for OCaml ecosystem and package manager (OPAM)\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Created also by Jordan Walke\"), mdx(\"li\", null, \"Easiness to create pre-compiled and multiplatform programs\"), mdx(\"li\", null, \"Created with esy:\"))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(ImageFit, {\n    src: fnmImage,\n    mdxType: \"ImageFit\"\n  }), mdx(\"div\", null, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"fnm\"), \"Fast and simple Node.js version manager, built in native ReasonML\")), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(Image, {\n    src: glitchUnsettlingImage,\n    mdxType: \"Image\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Unsettling\")), mdx(\"hr\", null), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Problems\"), mdx(\"ul\", null, mdx(\"li\", null, \"Mindset change\"), mdx(Appear, {\n    mdxType: \"Appear\"\n  }, mdx(\"li\", null, \"Syntax errors\"), mdx(\"li\", null, \"Comnunity is growing at a fast pace, but you may still not find everything you need\"))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(Image, {\n    src: astrocodersImage,\n    mdxType: \"Image\"\n  }), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"We're hiring\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/astrocoders\"\n  }), \"https://github.com/astrocoders\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", _extends({\n    parentName: \"li\"\n  }, {\n    \"href\": \"https://github.com/Astrocoders/fullstack-challenge\"\n  }), \"https://github.com/Astrocoders/fullstack-challenge\")))), mdx(\"hr\", null), mdx(SplitLayout, {\n    mdxType: \"SplitLayout\"\n  }, mdx(VideoBackground, {\n    src: glitchFacesVideo,\n    mdxType: \"VideoBackground\"\n  }), mdx(\"div\", null, mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Thank you!\"), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"Obrigado!\"), mdx(Title, {\n    mdxType: \"Title\"\n  }, \"\\u8B1D\\u8B1D\\uFF01\"))));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"matchPath":"/*","isCreatedByStatefulCreatePages":false,"id":"9bbbae6a-b43c-509c-a30d-7ae352628c90","slug":"","title":"Incoming from the future"}}}